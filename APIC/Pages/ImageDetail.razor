@page "/image-detail/{ImageId}"
@inject NavigationManager NavigationManager
@inject IJSRuntime JS
@using System.Text.Json

<h1>Détail de l'image</h1>

@if (selectedImage != null)
{
    <div>
        <img src="@selectedImage.Url" alt="Image sélectionnée" class="cat-image" />
        <div>
            <p>Tags: <input type="text" value="@string.Join(", ", selectedImage.Tags ?? new List<string>())" @onchange="@(e => UpdateTagsTemp(e.Value.ToString()))" /></p>
            <button @onclick="ValidateTags">Valider</button>
            <p>Créé le : @selectedImage.CreatedAt.ToString("g")</p>
            <p>Mise à jour le : @selectedImage.UpdatedAt.ToString("g")</p>
            <button class="btn btn-danger" @onclick="RemoveFromFavorites">Supprimer des favoris</button>
        </div>
    </div>
}

@code {
    [Parameter]
    public string ImageId { get; set; }

    private ApiSimpleResponse? selectedImage;
    private string tempTags;

    protected override async Task OnInitializedAsync()
    {
        await LoadImageDetail();
    }

    private async Task LoadImageDetail()
    {
        var favoritesJson = await JS.InvokeAsync<string>("getFavoriteImages");
        var favorites = JsonSerializer.Deserialize<List<ApiSimpleResponse>>(favoritesJson) ?? new List<ApiSimpleResponse>();
        selectedImage = favorites.FirstOrDefault(img => img.Id == ImageId);
    }

    private void UpdateTagsTemp(string newTags)
    {
        tempTags = newTags;
    }

    private async Task ValidateTags()
    {
        if (selectedImage != null)
        {
            var updatedTags = tempTags.Split(',').Select(tag => tag.Trim()).ToList();
            selectedImage.Tags = updatedTags;
            selectedImage.UpdatedAt = DateTime.UtcNow;
            await JS.InvokeVoidAsync("updateFavoriteImage", selectedImage.Id, updatedTags, selectedImage.UpdatedAt.ToString("o"));
        }
    }

    private async Task RemoveFromFavorites()
    {
        if (selectedImage != null)
        {
            await JS.InvokeVoidAsync("removeFavoriteImage", selectedImage.Id);
            NavigationManager.NavigateTo("/favorites");
        }
    }

}
