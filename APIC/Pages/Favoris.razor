@page "/favorites"
@inject IJSRuntime JS
@using System.Text.Json
@inject NavigationManager NavigationManager


<h1>Favoris</h1>

<div class="favorites-grid">
    @if (favoriteImages != null)
    {
        @foreach (var image in favoriteImages)
        {
            <img src="@image.Url" alt="Image favorite" @onclick="() => NavigateToImageDetail(image.Id)" class="thumbnail" />
        }
    }
</div>

@if (selectedImage != null)
{
    <div class="modal">
        <div class="modal-content">
            <span @onclick="() => CloseModal()" class="close">&times;</span>
            <img src="@selectedImage.Url" alt="Image sélectionnée" class="selected-image" />
            <input type="text" value="@string.Join(", ", selectedImage.Tags ?? new List<string>())" @onchange="@(e => UpdateTags(selectedImage, e.Value.ToString()))" />
        </div>
    </div>
}

@code {
    private List<ApiSimpleResponse>? favoriteImages;
    private ApiSimpleResponse? selectedImage;

    protected override async Task OnInitializedAsync()
    {
        await LoadFavorites();
    }

    private async Task LoadFavorites()
    {
        var favoritesJson = await JS.InvokeAsync<string>("getFavoriteImages");
        favoriteImages = JsonSerializer.Deserialize<List<ApiSimpleResponse>>(favoritesJson) ?? new List<ApiSimpleResponse>();
    }

    private void SelectImage(ApiSimpleResponse image)
    {
        selectedImage = image;
        StateHasChanged(); // Force le rafraîchissement de l'interface utilisateur
    }

    private void CloseModal()
    {
        selectedImage = null;
    }

    private async Task UpdateTags(ApiSimpleResponse image, string newTags)
    {
        var updatedTags = newTags.Split(',').Select(tag => tag.Trim()).ToList();
        image.Tags = updatedTags;
        image.UpdatedAt = DateTime.UtcNow;

        await JS.InvokeVoidAsync("updateFavoriteImage", image.Id, updatedTags, image.UpdatedAt.ToString("o"));
        await LoadFavorites();
        StateHasChanged();
    }

    private void NavigateToImageDetail(string imageId)
    {
        NavigationManager.NavigateTo($"/image-detail/{imageId}");
    }
}
